------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter11;

abstract class HyperCar {
	public abstract void HyperCarRun();
}

class Bugatti extends HyperCar {
	@Override
	public void HyperCarRun() {
		System.out.println("SuperCar Bugatti Run!");
	}
}


class Laferrari extends HyperCar {
	@Override
	public void HyperCarRun() {
		System.out.println("SuperCar Laferrari Run!");
	}
}

class Hyundai extends HyperCar {
	@Override
	public void HyperCarRun() {
		System.out.println("SuperCar Hyundai Run!");
	}
}


class Driver {      // HyperCar hyperCar = new Bugatti();
	public void drive(HyperCar hyperCar) {
		hyperCar.HyperCarRun();
	}
}

public class EX07 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Driver drive = new Driver();
		drive.drive(new Bugatti());
		drive.drive(new Laferrari());
		drive.drive(new Hyundai());
	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter11;

class ParentClass {
	public String parent;
	public void ParentRun() {
		System.out.println("Parents Class Run!");
	}
}

class ChildClass extends ParentClass {
	public String child;
	public void ChildRun() {
		System.out.println("Child Class Run!");
	}
}

public class EX08 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ParentClass parent = new ChildClass();
		parent.parent = "부모클래스";
		System.out.println(parent.parent);
		parent.ParentRun();
		System.out.println();
		
		ChildClass child = (ChildClass)parent;
		child.child = "자식클래스";
		child.ChildRun();
	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter11;

interface TV {
	// 상수
	public int MIN_VOLUME = 0;
	public int MAX_VOLUME = 100;
	
	// 추상 메서드
	public void turnOn();
	public void turnOff();
	public void changeVolume(int volume);
	public void changeChannel(int channel);
}

class QLEDTV implements TV {
	public void turnOn() {
		System.out.println("켜다");
	}
	public void turnOff() {
		System.out.println("끄다");
	}
	public void changeVolume(int volume) {
		System.out.println(volume + "으로 볼륨을 조절하다.");
	}
	public void changeChannel(int channel) {
		System.out.println(channel + "으로 채널을 변경하다.");
	}
}



class NewTV implements TV {
	public void turnOn() {
		System.out.println("3D TV 켜다");
	}
	public void turnOff() {
		System.out.println("3D TV 끄다");
	}
	public void changeVolume(int volume) {
		System.out.println(volume + "3D TV 으로 볼륨을 조절하다.");
	}
	public void changeChannel(int channel) {
		System.out.println(channel + "3D TV 으로 채널을 변경하다.");
	}
}

public class EX09 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TV tv = new NewTV();
		tv.turnOn();
		tv.changeChannel(9);
		tv.changeVolume(99);
		tv.turnOff();
	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter12;

public class EX01 {

	public static void main(String[] args) {
		// 예외처리 예제
		try {
			System.out.println("수행 코드 작성 영역");
		} catch (NullPointerException e) {
			System.out.println("NullPointer 예외가 발생될 경우 실행!");
		} catch (Exception e) {
			System.out.println("예외 발생 시 실행될 코드 작성 영역!");
		} finally {
			System.out.println("예외 여부와 관계 없이 무조건 실행!");
			System.out.println("생략 가능");
		}

	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter12;

public class EX02 {

	public static void main(String[] args) {
		// 일반 예외
		Class test = Class.forName("Animal");
		// ClassNotFoundException
	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter12;

public class EX03 {

	public static void main(String[] args) {
		// 일반 예외(해결)
		try {
		Class test = Class.forName("Animal");
		} catch (Exception e) {
			System.out.println("예외 발생!");
		}
	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter12;

public class EX04 {

	public static void main(String[] args) {
		// 실행 예외
		String str = null;
		System.out.println(str.charAt(0));
		// java.lang.NullPointerException

	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter12;

public class EX05 {

	public static void main(String[] args) {
		// 실행 예외(해결)
		
		try {
		String str = null;
		System.out.println(str.charAt(0));
		} catch (NullPointerException e) {
			System.out.println("NullPointerException 발생!");
		} finally {
			System.out.println("무조건 실행되며 생략가능!");
		}

	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter12;

public class EX06 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {1,2,3};
		
		for (int i = 0; i < 5; i++) {
			System.out.println(arr[i] + " ");
			// java.lang.ArrayIndexOutOfBoundsException
		}
	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
package Chapter12;

public class EX07 {

	public static void main(String[] args) {
		// 해결1
		int[] arr = {1,2,3};
		
		try {
			for (int i = 0; i < 5; i++) {
				System.out.println(arr[i] + " ");
				// java.lang.ArrayIndexOutOfBoundsException
			}
		} catch (Exception e) {
			System.out.println("인덱스 범위를 벗어났습니다.");
		}
	}

}

------------------------------------------------------------------------------------------------------------------------------------------------------
